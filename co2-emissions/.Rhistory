geom_line()
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = n, color = raw_subject_race_description)) +
geom_point() +
geom_line() + scale_x_continuous(limits=c(2010,2019)) + scale_y_continuous(limits=c(0,100000))
# Make a graph of the number of stops vs. year, separated by race.
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = n, color = raw_subject_race_description)) +
geom_point() +
geom_line() + scale_x_continuous(limits=c(2010,2019)) + scale_y_continuous(limits=c(-100000,100000))
# Make a graph of the number of stops vs. year, separated by race.
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = n, color = raw_subject_race_description)) +
geom_point() +
geom_line()
# Make a graph of the number of stops vs. year, separated by race.
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = n, color = raw_subject_race_description)) +
geom_point() +
geom_line() + coord_cartesian(ylim=c(0,70000))
# Make a graph of the number of stops vs. year, separated by race.
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = n, color = raw_subject_race_description)) +
geom_point() +
geom_line() + coord_cartesian(xlim=c(0,2017))
# Make a graph of the number of stops vs. year, separated by race.
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = n, color = raw_subject_race_description)) +
geom_point() +
geom_line()
# Make a graph of the number of stops vs. year, separated by race.
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = stops, color = subject_race)) +
geom_point() +
geom_line()
# Make a graph of the number of stops vs. year, separated by race.
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = stops, color = raw_subject_race_description)) +
geom_point() +
geom_line()
# Make a graph of the number of stops vs. year, separated by race.
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = n, color = raw_subject_race_description)) +
geom_point() +
geom_line()
# tidyverse
library(tidyverse)
# ggplot2
library(ggplot2)
# lubridate
library(lubridate)
# Load the data (use read_rds for an rds file. use read.csv or read_csv for a csv file)
stops = read_rds("~/Uni/Statistics/yg821jf8611_ca_san_diego_2020_04_01.rds")
# Make a table of the number of stops as a function of subject race
stops %>%
count(subject_race)
#Draw subject race
stops %>%
count(raw_subject_race_description)
# Make a graph of the number of stops vs. year, separated by race
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
# Draw subject race
stops %>%
count(year = year(date), raw_subject_race_description) %>%
ggplot(aes(x = year, y = n, color = raw_subject_race_description)) +
geom_point() +
geom_line()
# tidyverse
library(tidyverse)
# ggplot2
library(ggplot2)
# lubridate
library(lubridate)
# tidyverse
library(tidyverse)
# lubridate
library(lubridate)
stops = read_rds("~/Uni/Statistics/Lab/Project/yg821jf8611_ca_san_diego_2020_04_01.rds")
population_2017 <- tibble(
subject_race = c(
"asian/pacific islander", "black", "hispanic", "other", "white"
),
num_people = c(213915, 86409, 374605, 234623, 766663)
) %>%
mutate(subject_race = as.factor(subject_race))
stops <- filter(stops, year(date) < 2017)
stops <- filter(stops, subject_race != "NA")
stops %>%
count(subject_race)
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops = stops %>% filter(type == "vehicular")
stops %>%
count(subject_race) %>%
left_join(
population_2017,
by = "subject_race"
) %>%
mutate(stop_rate = n / num_people)
# = stops %>% na.exclude(search_conducted)
#stops = stops %>% na.exclude(search_person)
stops %>%
group_by(subject_race) %>%
summarize(
search_rate = mean(search_conducted, na.rm = T),
person_searched_rate = mean(search_person, na.rm = T) #was frisk originally
)
stops %>%
group_by(subject_race) %>%
summarize(
search_rate = mean(search_conducted, na.rm = T),
person_searched_rate = mean(search_person, na.rm = T)
)
stops %>%
group_by(subject_race) %>%
summarize(
search_rate = mean(search_conducted, na.rm = T),
frisk_rate = mean(frisk_performed, na.rm = T)
)
# tidyverse
library(tidyverse)
# lubridate
library(lubridate)
stops = read_rds("~/Uni/Statistics/Lab/Project/yg821jf8611_ca_san_diego_2020_04_01.rds")
population_2017 <- tibble(
subject_race = c(
"asian/pacific islander", "black", "hispanic", "other", "white"
),
num_people = c(213915, 86409, 374605, 234623, 766663)
) %>%
mutate(subject_race = as.factor(subject_race))
stops <- filter(stops, year(date) < 2017)
stops <- filter(stops, subject_race != "NA")
stops %>%
count(subject_race)
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops = stops %>% filter(type == "vehicular")
stops %>%
count(subject_race) %>%
left_join(
population_2017,
by = "subject_race"
) %>%
mutate(stop_rate = n / num_people)
stops %>%
group_by(subject_race) %>%
summarize(
search_rate = mean(search_conducted, na.rm = T),
frisk_rate = mean(frisk_performed, na.rm = T)
)
View(stops)
library(tidyverse)
df = read.csv('~/CO2Emissions/CO2EmissionsCountries1960to2014.csv')
library(tidyverse)
df = read.csv('~/CO2Emissions/CO2EmissionsCountries1960to2014.csv')
library(tidyverse)
df = read.csv('~/CO2Emissions/CO2EmissionsCountries1960to2014.csv')
library(tidyverse)
df = read.csv('~/CO2Emissions/CO2EmissionsCountries1960to2014.csv')
df = read.csv('~/my-portfolio/CO2Emissions/CO2EmissionsCountries1960to2014.csv')
head(df)
names(df)
head(df)
str(df)
#To look at the entire data set, we can type the name of our data frame.
#To look at one column, type df$Name of the column
df$X2010
attach(df)
X2010
hist(X2010, xlab = "CO_2 Emissions (metric tons/person)",main = " ")
ggplot(df, aes(x = X2010)) +
geom_histogram(boundary = 0) +
xlab("CO_2 Emissions (metric tons/person)") +
theme_bw()
hist(X2010, freq = FALSE, xlab = "CO_2 Emissions (metric tons/person)", main = " ")
ggplot(df, aes(x = X2010, y = ..density..)) +
geom_histogram(boundary = 0) +
xlab("CO_2 Emissions (metric tons/person)") +
theme_bw()
#Set up the plot with 4 panels
par(mfrow = c(2,2))
#Use 5 bins
hist(X2010, breaks = 5, xlab = "CO_2 Emissions (metric tons/person)", main = "5 bins")
#Use 10 bins
hist(X2010, breaks = 10, xlab = "CO_2 Emissions (metric tons/person)", main = "10 bins")
#Use 15 bins
hist(X2010, breaks = 15, xlab = "CO_2 Emissions (metric tons/person)", main = "15 bins")
#Use 20 bins
hist(X2010, breaks = 20, xlab = "CO_2 Emissions (metric tons/person)", main = "20 bins")
summary(X2010)
#Set up the plot with 4 panels
par(mfrow = c(2,2))
#Use 5 bins
hist(X2010, breaks = seq(0,41,length.out = 6), xlab = "CO_2 Emissions (metric tons/person)", main = "5 bins")
#Use 10 bins
hist(X2010, breaks = seq(0,41,length.out = 11), xlab = "CO_2 Emissions (metric tons/person)", main = "10 bins")
#Use 15 bins
hist(X2010, breaks = seq(0,41,length.out = 16), xlab = "CO_2 Emissions (metric tons/person)", main = "15 bins")
#Use 20 bins
hist(X2010, breaks = seq(0,41,length.out = 21), xlab = "CO_2 Emissions (metric tons/person)", main = "20 bins")
summary(df)
apply(df,2,sd,na.rm = TRUE)
apply(df,2,IQR,na.rm = TRUE)
summary(X2010)
sd(X2010,na.rm = TRUE)
IQR(X2010,na.rm = TRUE)
df_spread = df %>%
summarize(std_dev = sd(X2010,na.rm = TRUE), iqr = IQR(X2010,na.rm = TRUE))
df_spread
lower_bound = quantile(X2010,.25,na.rm = TRUE,names = FALSE) - 1.5*IQR(X2010,na.rm = TRUE)
upper_bound = quantile(X2010,.75,na.rm = TRUE,names = FALSE) + 1.5*IQR(X2010,na.rm = TRUE)
print(c(lower_bound,upper_bound))
ggplot(df, aes(x = X2010)) +
geom_histogram(boundary = 0) +
xlab("CO_2 Emissions (metric tons/person)") +
theme_bw()
df2 = df %>% filter(X2010 > upper_bound)
df2[,c("Country.Name","X2010")]
df_upper = na.omit(data.frame("Country" = Country.Name[X2010 > upper_bound], "CO2" = X2010[X2010 > upper_bound]))
df_upper
U = mean(X2010,na.rm = TRUE) + 2*sd(X2010,na.rm = TRUE)
L = mean(X2010,na.rm = TRUE) - 2*sd(X2010,na.rm = TRUE)
print(c(L,U))
boxplot(X2010, ylab = "CO_2 Emissions (metric tons/person)")
ggplot(data = df,mapping = aes(y = X2010)) +
geom_boxplot() +
ylab("CO_2 Emissions (metric tons/person)") +
theme_bw()
ggplot(data = df,mapping = aes(x = 0, y = X2010)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(position=position_jitter(0.1), cex=1, alpha = 0.5, color = 'blue') +
ylab("CO_2 Emissions (metric tons/person)") +
theme_bw()
df_tidy = df %>%
pivot_longer(names_to = "year",
values_to = "CO2",
cols = -c(Country.Name,Country.Code,Indicator.Name,Indicator.Code))
head(df_tidy)
ggplot(data = df_tidy, mapping = aes(x = year, y = CO2)) + geom_boxplot() + theme_bw() + labs(x = "year",y = "CO_2 Emissions (metric tons/person)")
df_tidy_small = df_tidy %>% filter(year == "X1960" | year == "X2010")
head(df_tidy_small)
ggplot(data = df_tidy_small, mapping = aes(x = year, y = CO2))  +
geom_boxplot(outlier.shape = NA) + theme_bw() +
geom_jitter(position=position_jitter(0.1), cex=1, alpha = 0.5, color = 'blue') +
xlab("Year") + ylab("CO_2 Emissions (metric tons/person)")
df = read.csv('~/my-portfolio/CO2Emissions/CO2EmissionsCountries1960to2014.csv')
df = read.csv('~/CO2Emissions/CO2EmissionsCountries1960to2014.csv')
df = read.csv('~/my-portfolio/co2-emissions/CO2EmissionsCountries1960to2014.csv')
library(tidyverse)
library(tidyverse)
df = read.csv('~/my-portfolio/co2-emissions/CO2EmissionsCountries1960to2014.csv')
head(df)
names(df)
head(df)
str(df)
#To look at the entire data set, we can type the name of our data frame.
#To look at one column, type df$Name of the column
df$X2010
attach(df)
X2010
hist(X2010, xlab = "CO_2 Emissions (metric tons/person)",main = " ")
ggplot(df, aes(x = X2010)) +
geom_histogram(boundary = 0) +
xlab("CO_2 Emissions (metric tons/person)") +
theme_bw()
hist(X2010, freq = FALSE, xlab = "CO_2 Emissions (metric tons/person)", main = " ")
ggplot(df, aes(x = X2010, y = ..density..)) +
geom_histogram(boundary = 0) +
xlab("CO_2 Emissions (metric tons/person)") +
theme_bw()
#Set up the plot with 4 panels
par(mfrow = c(2,2))
#Use 5 bins
hist(X2010, breaks = 5, xlab = "CO_2 Emissions (metric tons/person)", main = "5 bins")
#Use 10 bins
hist(X2010, breaks = 10, xlab = "CO_2 Emissions (metric tons/person)", main = "10 bins")
#Use 15 bins
hist(X2010, breaks = 15, xlab = "CO_2 Emissions (metric tons/person)", main = "15 bins")
#Use 20 bins
hist(X2010, breaks = 20, xlab = "CO_2 Emissions (metric tons/person)", main = "20 bins")
summary(X2010)
#Set up the plot with 4 panels
par(mfrow = c(2,2))
#Use 5 bins
hist(X2010, breaks = seq(0,41,length.out = 6), xlab = "CO_2 Emissions (metric tons/person)", main = "5 bins")
#Use 10 bins
hist(X2010, breaks = seq(0,41,length.out = 11), xlab = "CO_2 Emissions (metric tons/person)", main = "10 bins")
#Use 15 bins
hist(X2010, breaks = seq(0,41,length.out = 16), xlab = "CO_2 Emissions (metric tons/person)", main = "15 bins")
#Use 20 bins
hist(X2010, breaks = seq(0,41,length.out = 21), xlab = "CO_2 Emissions (metric tons/person)", main = "20 bins")
summary(df)
apply(df,2,sd,na.rm = TRUE)
apply(df,2,IQR,na.rm = TRUE)
summary(X2010)
sd(X2010,na.rm = TRUE)
IQR(X2010,na.rm = TRUE)
df_spread = df %>%
summarize(std_dev = sd(X2010,na.rm = TRUE), iqr = IQR(X2010,na.rm = TRUE))
df_spread
lower_bound = quantile(X2010,.25,na.rm = TRUE,names = FALSE) - 1.5*IQR(X2010,na.rm = TRUE)
upper_bound = quantile(X2010,.75,na.rm = TRUE,names = FALSE) + 1.5*IQR(X2010,na.rm = TRUE)
print(c(lower_bound,upper_bound))
ggplot(df, aes(x = X2010)) +
geom_histogram(boundary = 0) +
xlab("CO_2 Emissions (metric tons/person)") +
theme_bw()
df2 = df %>% filter(X2010 > upper_bound)
df2[,c("Country.Name","X2010")]
df_upper = na.omit(data.frame("Country" = Country.Name[X2010 > upper_bound], "CO2" = X2010[X2010 > upper_bound]))
df_upper
U = mean(X2010,na.rm = TRUE) + 2*sd(X2010,na.rm = TRUE)
L = mean(X2010,na.rm = TRUE) - 2*sd(X2010,na.rm = TRUE)
print(c(L,U))
boxplot(X2010, ylab = "CO_2 Emissions (metric tons/person)")
ggplot(data = df,mapping = aes(y = X2010)) +
geom_boxplot() +
ylab("CO_2 Emissions (metric tons/person)") +
theme_bw()
ggplot(data = df,mapping = aes(x = 0, y = X2010)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(position=position_jitter(0.1), cex=1, alpha = 0.5, color = 'blue') +
ylab("CO_2 Emissions (metric tons/person)") +
theme_bw()
df_tidy = df %>%
pivot_longer(names_to = "year",
values_to = "CO2",
cols = -c(Country.Name,Country.Code,Indicator.Name,Indicator.Code))
head(df_tidy)
ggplot(data = df_tidy, mapping = aes(x = year, y = CO2)) + geom_boxplot() + theme_bw() + labs(x = "year",y = "CO_2 Emissions (metric tons/person)")
df_tidy_small = df_tidy %>% filter(year == "X1960" | year == "X2010")
head(df_tidy_small)
ggplot(data = df_tidy_small, mapping = aes(x = year, y = CO2))  +
geom_boxplot(outlier.shape = NA) + theme_bw() +
geom_jitter(position=position_jitter(0.1), cex=1, alpha = 0.5, color = 'blue') +
xlab("Year") + ylab("CO_2 Emissions (metric tons/person)")
# tidyverse
library(tidyverse)
# ggplot2
library(ggplot2)
# lubridate
library(lubridate)
# suncalc
library(suncalc)
stops = read_rds("~/my-portfolio/san-diego-traffic-stop/yg821jf8611_ca_san_diego_2020_04_01.rds")
stops <- filter(stops, year(date) < 2017)
stops <- filter(stops, subject_race != "NA")
population <- tibble(
subject_race = c(
"asian/pacific islander", "black", "hispanic", "other", "white"
),
num_people = c(213915, 86409, 374605, 234623, 766663)
) %>%
mutate(subject_race = as.factor(subject_race))
center_lat <-32.7157
center_lng <- 117.1611
# subject_race table
stops %>%
count(subject_race)
# graph of traffic stops over time for each race
stops %>%
count(year = year(date), subject_race) %>%
ggplot(aes(x = year, y = n, color = subject_race)) +
geom_point() +
geom_line()
stops = stops %>% filter(type == "vehicular")
population %>%
mutate(proportion = num_people / sum(num_people))
# benchmark test
stops %>%
count(subject_race) %>%
# combining 2 tables, subject_race & population
left_join(
population,
by = "subject_race"
) %>%
# add stop rate column
mutate(stop_rate = n / num_people) # calculate stop rates
stops %>% group_by(subject_race) %>% summarise(arrest_rate = mean(arrest_made))
# stops = stops %>% na.exclude(search_conducted)
# stops = stops %>% na.exclude(search_person)
stops %>%
group_by(subject_race) %>%
summarise(
#    search_rate = mean(search_conducted, na.rm = T), #was frisk originally does not work for this analysis
person_searched_rate = mean(search_person, na.rm = T)
)
stops %>%
filter(search_conducted) %>%
group_by(subject_race) %>%
summarize(
hit_rate = mean(contraband_found, na.rm = T)
)
#THis is using the lat and long set earlier.
tz <- lutz::tz_lookup_coords(center_lat, center_lng, warn = F)
# Helper function
time_to_minute <- function(time) {
hour(hms(time)) * 60 + minute(hms(time))
}
# Compute sunset time for each date in our dataset
sunset_times <-
stops %>%
mutate(
lat = center_lat,
lon = center_lng
) %>%
select(date, lat, lon) %>%
distinct() %>%
getSunlightTimes(
data = .,
keep = c("sunset", "dusk"),
tz = tz
) %>%
mutate_at(vars("sunset", "dusk"), ~format(., "%H:%M:%S")) %>%
mutate(
sunset_minute = time_to_minute(sunset),
dusk_minute = time_to_minute(dusk),
date = ymd(str_sub(date, 1, 10))
) %>%
select(date, sunset, dusk, ends_with("minute"))
sunset_times %>%
filter(dusk == min(dusk) | dusk == max(dusk))
vod_stops <-
stops %>%
left_join(
sunset_times,
by = "date"
) %>%
mutate(
minute = time_to_minute(time),
minutes_after_dark = minute - dusk_minute,
is_dark = minute > dusk_minute,
min_dusk_minute = min(dusk_minute),
max_dusk_minute = max(dusk_minute),
is_black = subject_race == "black"
) %>%
filter(
# Filter to get only the intertwilight period
minute >= min_dusk_minute,
minute <= max_dusk_minute,
# Remove ambigous period between sunset and dusk
!(minute > sunset_minute & minute < dusk_minute),
# Compare only white and black drivers
subject_race %in% c("black", "white")
)
vod_stops %>% nrow()
suppressWarnings(
vod_stops %>%
filter(time > hm("18:30"), time < hm("18:45")) %>%
group_by(is_dark) %>%
summarize(prop_black = mean(is_black)))
mod1 <- glm(
is_black ~ is_dark + splines::ns(minute, df = 6),
family = binomial,
data = vod_stops
)
summary(mod1)$coefficients["is_darkTRUE", c("Estimate", "Std. Error")]
